'Counter-example trace generated using HyLAA'

import sys
import numpy as np
from hylaa.check_trace import check, plot

def check_instance():
    'define parameters for one instance and call checking function'

    # dynamics x' = Ax + Bu + c
    a_matrix = np.array([\
        [1.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], \
        [-0.7364211439882522, 0.13252765763319507, -0.14691402450501645, -0.1558972652522463, -0.10221233412366962, -0.10862360376206111, -0.07214496911697381, -0.07678950597200243, -0.05141635491578325, -0.05481161179002967, -0.0367105324143106, -0.03919275912325535, -0.025914664052822764, -0.027703870780313583, -0.01765116004114218, -0.018890941070317448, -0.010991461896175572, -0.011773394522545694, -0.005276656709026192, -0.0056549975703793645, 0.0], \
        [0.0, 0.0, 1.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], \
        [-0.14691402450501778, -0.15589726525224765, -0.7811228343695897, 0.0852539961430121, 0.11684665949832362, 0.1240631674621891, 0.08148371992248332, 0.08664570958008988, 0.05743914661550396, 0.06117065330522929, 0.04062048655429743, 0.0433227234470887, 0.0284470284026285, 0.030379829413259504, 0.019254965907855855, 0.020586324232542214, 0.011936354853992675, 0.012772544118151322, 0.005714805187146462, 0.006118396952166184, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 1.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], \
        [-0.10221233412367196, -0.10862360376206329, 0.11684665949832486, 0.12406316746219005, -0.8018514485707757, 0.0632761019610405, 0.1021408369968477, 0.10844431479541501, 0.0706878515609955, 0.07515682123714842, 0.0491756426038182, 0.05235772359523277, 0.033960788409327695, 0.03620517689931683, 0.022732223215479606, 0.024261432461093427, 0.013978309198831413, 0.014931326662163113, 0.0066596981449724, 0.0071175465477725346, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], \
        [-0.07214496911697567, -0.07678950597200383, 0.0814837199224825, 0.08664570958009003, 0.10214083699684715, 0.10844431479541437, -0.8126473169322637, 0.051787213618098016, 0.09387733298515809, 0.09963138508541719, 0.06402815341602941, 0.0680392746893761, 0.04346083741667858, 0.046239326643067034, 0.028684131700304153, 0.030550179328937492, 0.01745556650645372, 0.018606434890713713, 0.008263504011677901, 0.008812929709995997, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], \
        [-0.05141635491578424, -0.05481161179003031, 0.057439146615502534, 0.0611706533052287, 0.0706878515609948, 0.07515682123714748, 0.09387733298515832, 0.09963138508541652, -0.8193070150772225, 0.0446696670703266, 0.08816252779801276, 0.09351298813325064, 0.05875149670699354, 0.06238427711899525, 0.03818418070764947, 0.04058432907268704, 0.02296932651315642, 0.024431782376770964, 0.01079586836148637, 0.011488888342941728, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], \
        [-0.036710532414311166, -0.03919275912325545, 0.04062048655429549, 0.04332272344708788, 0.04917564260381646, 0.05235772359523147, 0.06402815341602697, 0.06803927468937511, 0.08816252779801205, 0.09351298813325012, -0.8245836717862596, 0.039014669499945476, 0.08288587108898972, 0.08785799056287123, 0.05303669151984813, 0.05626588016682916, 0.03152448256267667, 0.033466782524914425, 0.0147058225014751, 0.015618852666774584, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], \
        [-0.025914664052824905, -0.027703870780314444, 0.02844702840262923, 0.030379829413259705, 0.03396078840932875, 0.03620517689931677, 0.043460837416680144, 0.0462393266430672, 0.058751496706993686, 0.062384277118995496, 0.08288587108899059, 0.08785799056287188, -0.8302984769734, 0.032896272547780825, 0.0762261729440163, 0.08074044401509946, 0.04477318750816636, 0.04745295045683327, 0.02072861420119692, 0.02197789418197377, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0], \
        [-0.01765116004114275, -0.018890941070317746, 0.01925496590785472, 0.020586324232541944, 0.022732223215479623, 0.024261432461093045, 0.028684131700302266, 0.030550179328937086, 0.03818418070764928, 0.040584329072687074, 0.0530366915198476, 0.0562658801668294, 0.07622617294401568, 0.08074044401509904, -0.838561980985083, 0.024083342837783905, 0.0654303045825385, 0.06925155567215828, 0.030067365006688385, 0.03183409779005812, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.1, 0.0, 0.0, 0.0], \
        [-0.010991461896176653, -0.011773394522546755, 0.011936354853994198, 0.012772544118152209, 0.013978309198833022, 0.014931326662163768, 0.017455566506456372, 0.018606434890714563, 0.02296932651315781, 0.02443178237677179, 0.031524482562678306, 0.03346678252491555, 0.044773187508168895, 0.04745295045683404, 0.06543030458253951, 0.06925155567215904, -0.8532678034865614, 0.008464490171009253, 0.04470169038134424, 0.04727366149018517, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.1, 0.0], \
        [-0.0052766567090260915, -0.0056549975703791295, 0.005714805187147627, 0.0061183969521660065, 0.006659698144971888, 0.007117546547772037, 0.008263504011677475, 0.008812929709995653, 0.010795868361487364, 0.011488888342941726, 0.014705822501476042, 0.015618852666774626, 0.020728614201196482, 0.021977894181973462, 0.030067365006686757, 0.03183409779005787, 0.04470169038134347, 0.04727366149018493, -0.8833351684932544, -0.023369607619049715, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], \
        ])

    b_matrix = None
    c_vector = np.array([0.0, 26.893775362629206, 0.0, 5.458571408608686, 0.0, 4.334305675666371, 0.0, 3.500352000040478, 0.0, 0.37370335001384625, 0.0, 1.8049602198424597, 0.0, 4.432189622032592, 0.0, -0.7719516653377108, 0.0, 2.5608706851621927, 0.0, 0.9225512381051206, 0.1])

    inputs = None
    end_point = [10.946569820233819, 23.048231243630333, 1.0748245344463014, 0.2735075276863892, 1.0364271360861226, 0.7833728519634686, 1.1365806008164916, 0.9049654881831937, 1.5518096784952247, -1.947109771602022, 1.0306546392961455, 0.4178743996647081, 0.7735480910148194, 3.57655888339033, 1.2570945088510468, -2.0036684499742856, 0.8479042441932355, 1.9056921902544786, 1.424615168176332, -0.31648430057536503, 0.5]
    start_point = [-474758.03479094105, 4567062.831683615, -916386.18947728, 8856115.933357762, 613198.610515903, -5976842.706662878, -195362.56894325837, 1924304.0263067135, -862.2668048980713, 5440.551765061515, 96323.7205516818, -940042.4102793513, -188145.08017268762, 1829070.3202831247, 236679.44850771784, -2297111.47988929, -196879.2131431965, 1912721.069759596, 99814.30915511627, -973416.2126536097, 0.4]

    step = 0.1
    max_time = 0.1

    normal_vec = [-1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    normal_val = 0.0

    sim_states, sim_times = check(a_matrix, b_matrix, c_vector, step, max_time, start_point, inputs, end_point)

    if len(sys.argv) < 2 or sys.argv[1] != "noplot":
        plot(sim_states, sim_times, inputs, normal_vec, normal_val, max_time, step)

if __name__ == "__main__":
    check_instance()
