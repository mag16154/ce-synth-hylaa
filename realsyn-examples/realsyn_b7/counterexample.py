'Counter-example trace generated using HyLAA'

import sys
import numpy as np
from hylaa.check_trace import check, plot

def check_instance():
    'define parameters for one instance and call checking function'

    # dynamics x' = Ax + Bu + c
    a_matrix = np.array([\
        [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], \
        [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], \
        [-10.000000000000032, -1.54680666158521e-14, -11.020430183643988, 0.010888867131332497, 9.59517878695475e-16, 9.669395917006247e-16, 9.630721321448275e-17, 9.69657775512003e-17, 4.950503096145088e-16, 4.950503096139487e-16, 4.945261012842385e-17, 4.945261012837389e-17, 0.0], \
        [1.332891045799367e-14, -10.000000000000107, 0.010888867131332497, -11.020430183644002, 3.699083170731383e-15, 4.281153997358848e-15, 2.4906135519719127e-16, 4.140393297883257e-16, 2.1969104404401808e-15, 2.1969104404437224e-15, 2.1945841339394027e-16, 2.1945841339478733e-16, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0], \
        [9.856859154908716e-17, 9.181845681241549e-16, 9.630721321448275e-17, 2.4906135519719127e-16, -10.000000000000178, -1.8161741641847806e-14, -11.020430183644027, 0.0108888671313523, -1.4377239713706148e-14, -7.638929681691529e-15, 9.337754953849822e-15, 1.0221850578118637e-14, 0.0], \
        [9.242732597139534e-17, 1.0604161374444446e-15, 9.69657775512003e-17, 4.140393297883257e-16, 4.806583592669649e-14, -10.000000000000101, 0.0108888671313523, -11.020430183644041, 1.3686003404957113e-14, -2.10850942473273e-14, -2.746240454753405e-16, 8.487000610968736e-15, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], \
        [4.925452284304997e-17, -4.625234655263619e-17, 4.945261012842385e-17, 2.1945841339394027e-16, -4.335411294328682e-14, -1.4924827822872955e-14, 9.337754953849822e-15, -2.746240454753405e-16, -9.99999999999991, 7.222644550410389e-14, -11.02043018364403, 0.010888867131393837, 0.0], \
        [4.9254522842981615e-17, -4.625234655313389e-17, 4.945261012837389e-17, 2.1945841339478733e-16, -2.106673436650488e-14, 4.4986045416534453e-14, 1.0221850578118637e-14, 8.487000610968736e-15, -9.056703733238273e-14, -10.000000000000066, 0.010888867131393837, -11.020430183644029, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], \
        ])

    b_matrix = None
    c_vector = np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0])

    inputs = None
    end_point = [-2.002688779243272, -2.0330271452519986, 2.520400360212275, 2.496026711726407, -0.9822741037167211, -1.9298646537463473, 1.1680361366675982, 2.3675397480069513, 0.9871612455305133, -1.9312187020480893, -1.1636094981983285, 2.3658954465011113, 0.6500000000000001]
    start_point = [-4.1, -4.1, -0.1, -0.1, -1.9, -3.9, 0.0, 0.0, 1.9, -3.9, 0.0, 0.0, 0.5900000000000001]

    step = 0.01
    max_time = 0.06

    normal_vec = [0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    normal_val = -2.5

    sim_states, sim_times = check(a_matrix, b_matrix, c_vector, step, max_time, start_point, inputs, end_point)

    if len(sys.argv) < 2 or sys.argv[1] != "noplot":
        plot(sim_states, sim_times, inputs, normal_vec, normal_val, max_time, step)

if __name__ == "__main__":
    check_instance()
