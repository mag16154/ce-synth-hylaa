'Counter-example trace generated using HyLAA'

import sys
import numpy as np
from hylaa.check_trace import check, plot

def check_instance():
    'define parameters for one instance and call checking function'

    # dynamics x' = Ax + Bu + c
    a_matrix = np.array([\
        [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], \
        [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0], \
        [-10.000000000000032, -1.54680666158521e-14, -11.020430183643988, 0.010888867131332497, 1.1758956841400194e-17, -2.681334294705814e-18, -1.2265727568661034e-16, -5.663138695988891e-17, 0.0], \
        [1.332891045799367e-14, -10.000000000000107, 0.010888867131332497, -11.020430183644002, 7.173679678112233e-15, -2.3588588295196548e-15, 9.140860417400094e-16, -1.3564985061079296e-16, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], \
        [-1.2216992914100441e-16, 5.562137113516671e-16, -1.2265727568661034e-16, 9.140860417400094e-16, -9.999588296679438, -0.09074082273736088, -11.019944491391922, -0.10000000000000711, 0.0], \
        [-5.697098204390891e-17, -3.0924416589482436e-16, -5.663138695988891e-17, -1.3564985061079296e-16, 0.09074082273734198, -9.99958829667937, 0.0999999999999929, -11.019944491391902, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], \
        ])

    b_matrix = None
    c_vector = np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0])

    inputs = None
    end_point = [-1.3302991921498555, -2.5433378940298152, 1.5112511930095933, 2.96304179544807, 1.2238300179903323, -2.420056511204202, -1.3449446645307062, 2.812923208131315, 0.5000000000000001]
    start_point = [-2.1, -4.1, 0.0, 0.0, 1.9, -3.9, 0.0, 0.0, 0.41000000000000003]

    step = 0.01
    max_time = 0.09

    normal_vec = [0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    normal_val = -1.5

    sim_states, sim_times = check(a_matrix, b_matrix, c_vector, step, max_time, start_point, inputs, end_point)

    if len(sys.argv) < 2 or sys.argv[1] != "noplot":
        plot(sim_states, sim_times, inputs, normal_vec, normal_val, max_time, step)

if __name__ == "__main__":
    check_instance()
