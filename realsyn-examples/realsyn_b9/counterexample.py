'Counter-example trace generated using HyLAA'

import sys
import numpy as np
from hylaa.check_trace import check, plot

def check_instance():
    'define parameters for one instance and call checking function'

    # dynamics x' = Ax + Bu + c
    a_matrix = np.array([\
        [1.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], \
        [-0.7398527455133954, 0.12878176824169474, -0.14335448056556063, -0.15201513320138912, -0.09838658296580742, -0.10445806629267902, -0.06789271794111401, -0.07217010038652096, -0.04654055168140933, -0.04952900288431522, -0.030957387576507095, -0.032977630610529066, -0.018945167761774726, -0.020196845302816707, -0.008999092003161475, -0.009598253991366799, 0.0], \
        [0.0, 0.0, 1.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], \
        [-0.14335448056556366, -0.1520151332013899, -0.7848206431131413, 0.08122470133298632, 0.11286061554086828, 0.11972716729523128, 0.07703441670610789, 0.08181696879047422, 0.05230955383621259, 0.05561872811273531, 0.034528331866680015, 0.03674821757660346, 0.021011311817893372, 0.02237903929907932, 0.009946075758615369, 0.01059859131145022, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 1.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], \
        [-0.09838658296580904, -0.1044580662926792, 0.11286061554086789, 0.11972716729523077, -0.8061728093728401, 0.05858360383078043, 0.09727745143596125, 0.10317579502144421, 0.06502219689137619, 0.0690361834827616, 0.04236347807759871, 0.045020136801285096, 0.02552923986352144, 0.027149963585236775, 0.012012219814731028, 0.012780785307712329, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], \
        [-0.06789271794111541, -0.07217010038652111, 0.07703441670610811, 0.08181696879047375, 0.09727745143596067, 0.10317579502144426, -0.8181850291875731, 0.04580281852306811, 0.08733137567734871, 0.09257720370999456, 0.05602310488821086, 0.05943792949139442, 0.03336438607443353, 0.035421882809917926, 0.015583164104906113, 0.01655137227378666, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], \
        [-0.04654055168141091, -0.04952900288431556, 0.052309553836213454, 0.05561872811273522, 0.06502219689137556, 0.0690361834827618, 0.08733137567735033, 0.09257720370999484, -0.8271841211907325, 0.03620456453170151, 0.07833228367418844, 0.08297894971862792, 0.04607702912959753, 0.04883933817994462, 0.021352166259700416, 0.0226410975022055, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0], \
        [-0.030957387576507414, -0.03297763061052904, 0.03452833186667862, 0.03674821757660287, 0.0423634780775974, 0.04502013680128471, 0.05602310488821126, 0.05943792949139427, 0.07833228367418438, 0.08297894971862713, -0.8371301969493494, 0.02560597322025071, 0.066320063859452, 0.07019816441091466, 0.03049386502469296, 0.032287965906157935, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.1, 0.0, 0.0, 0.0], \
        [-0.018945167761775898, -0.020196845302817387, 0.02101131181789511, 0.022379039299079848, 0.025529239863523723, 0.0271499635852374, 0.033364386074436134, 0.03542188280991862, 0.04607702912959946, 0.04883933817994507, 0.06632006385945571, 0.07019816441091549, -0.8527133610542489, 0.009054600946465485, 0.04496789759975499, 0.04755706690871002, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.1, 0.0], \
        [-0.008999092003161372, -0.009598253991366589, 0.009946075758615518, 0.010598591311449988, 0.012012219814730277, 0.012780785307712058, 0.015583164104905158, 0.016551372273786374, 0.0213521662596986, 0.022641097502205148, 0.030493865024693572, 0.032287965906158046, 0.04496789759975214, 0.0475570669087096, -0.8832072260789473, -0.023233364959693192, 0.0], \
        [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], \
        ])

    b_matrix = None
    c_vector = np.array([0.0, 24.44809191554264, 0.0, 4.014555952020528, 0.0, 5.090060905231704, 0.0, 1.6502182195308839, 0.0, 2.9307986767641054, 0.0, 1.338698411904521, 0.0, 2.569980752671552, 0.0, -0.0743089342801515, 0.1])

    inputs = None
    end_point = [9.64731943533341, 20.956463760214767, 0.399370084999837, -0.04240458556736204, 0.7960650380239983, 2.0439810127914964, 1.4319925712964743, -1.045794844512328, 0.8103887177682444, 1.3748471620791471, 1.0296048716988262, 0.02592152905641454, 1.3107822926671198, 1.3247191627217891, 1.2681553999459014, -1.2072666301868957, 0.5]
    start_point = [-391523.5499574004, 3767670.4564567353, -771915.6027122414, 7463781.407527302, 565918.8368017239, -5515468.985631794, -260589.60580096807, 2551378.4070632784, 95865.89434888813, -933825.4352903864, -638.4802675038062, 9459.07137494447, -45453.45988122923, 437213.90553780465, 33609.11351488754, -327060.7223724352, 0.4]

    step = 0.1
    max_time = 0.1

    normal_vec = [-1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    normal_val = 1.0

    sim_states, sim_times = check(a_matrix, b_matrix, c_vector, step, max_time, start_point, inputs, end_point)

    if len(sys.argv) < 2 or sys.argv[1] != "noplot":
        plot(sim_states, sim_times, inputs, normal_vec, normal_val, max_time, step)

if __name__ == "__main__":
    check_instance()
